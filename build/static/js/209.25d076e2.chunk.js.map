{"version":3,"file":"static/js/209.25d076e2.chunk.js","mappings":"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","sources":["places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-acitons\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <h2>The Map!</h2>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? PLease note tbat it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h2>{props.address}</h2>\r\n            <h2>{props.description}</h2>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete = {props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {\r\n\r\n      }\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId])\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces(prevPlaces => \r\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler}/>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserPlaces","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport Modal from './Modal'\r\nimport Button from '../FormElements/Button'\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <Modal\r\n        onCancel = {props.onClear}\r\n        header=\"An Error Occurred!\"\r\n        show={!!props.error}\r\n        footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n        <p>{props.error}</p>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ErrorModal","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}>\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n}\r\n\r\nconst Modal = props => {\r\n  return <React.Fragment>\r\n    {props.show && <Backdrop onClick={props.onCancel}/>}\r\n    <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\r\n        <ModalOverlay {...props}/>\r\n    </CSSTransition>\r\n  </React.Fragment>\r\n}\r\n\r\nexport default Modal","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n"],"names":["props","isLoading","error","sendRequest","clearError","useHttpClient","auth","useContext","AuthContext","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","_jsxs","React","children","_jsx","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","className","inverse","danger","async","process","concat","id","Authorization","token","onDelete","err","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","items","length","map","place","PlaceItem","creator","coordinates","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","useEffect","responseData","places","fetchPlaces","PlaceList","deletedPlaceId","prevPlaces","filter","href","size","Link","exact","type","disabled","style","ModalOverlay","content","headerClass","onSubmit","e","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useRef","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}