{"version":3,"file":"static/js/220.65a206b4.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","user/pages/Auth.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUGH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUGH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport Modal from './Modal'\r\nimport Button from '../FormElements/Button'\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <Modal\r\n        onCancel = {props.onClear}\r\n        header=\"An Error Occurred!\"\r\n        show={!!props.error}\r\n        footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n        <p>{props.error}</p>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ErrorModal","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}>\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n}\r\n\r\nconst Modal = props => {\r\n  return <React.Fragment>\r\n    {props.show && <Backdrop onClick={props.onCancel}/>}\r\n    <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\r\n        <ModalOverlay {...props}/>\r\n    </CSSTransition>\r\n  </React.Fragment>\r\n}\r\n\r\nexport default Modal","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          'POST',\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["props","href","_jsx","className","concat","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","file","setFile","useState","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","pickImageHandler","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","e","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","forEach","abortCtrl","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","ErrorModal","Card","LoadingSpinner","asOverlay","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","Input","ImageUpload","switchModeHandler","prevMode"],"sourceRoot":""}