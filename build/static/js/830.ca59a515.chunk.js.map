{"version":3,"file":"static/js/830.ca59a515.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true\r\n            }\r\n          },\r\n          true\r\n        );\r\n\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        'PATCH',\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n      history.push('/' + auth.userId + '/places');\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUGH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUGH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport Modal from './Modal'\r\nimport Button from '../FormElements/Button'\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <Modal\r\n        onCancel = {props.onClear}\r\n        header=\"An Error Occurred!\"\r\n        show={!!props.error}\r\n        footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n        <p>{props.error}</p>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ErrorModal","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}>\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n}\r\n\r\nconst Modal = props => {\r\n  return <React.Fragment>\r\n    {props.show && <Backdrop onClick={props.onCancel}/>}\r\n    <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\r\n        <ModalOverlay {...props}/>\r\n    </CSSTransition>\r\n  </React.Fragment>\r\n}\r\n\r\nexport default Modal","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["UpdatePlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","loadedPlace","setLoadedPlace","useState","placeId","useParams","history","useHistory","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","responseData","concat","process","place","err","fetchPlace","_jsx","className","children","LoadingSpinner","_jsxs","React","ErrorModal","onClear","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","props","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","e","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","response","fetch","signal","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}